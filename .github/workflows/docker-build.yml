name: Create and publish a Docker image
run-name: "Build Images for ${{ github.ref_name }}"
# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  workflow_dispatch:
  push:
    branches: ['main']
    paths: 
      - 'server/**'
      - 'client/**'
      - 'db/**'
      - 'utils/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    strategy:
      matrix: 
        images: ["app", "api", "db", "populate"]
        stage: ["development", "production"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: get context from name
        id: context
        run: |
            if [[ "${{ matrix.images }}" =~ "app" ]]; then
                echo "context=./client" >> $GITHUB_OUTPUT
                echo "target=${{ matrix.stage }}"  >> $GITHUB_OUTPUT
            elif [[ "${{matrix.images}}" =~ "api" ]]; then
              echo "context=./server" >> $GITHUB_OUTPUT
              echo "target=${{ matrix.stage }}"  >> $GITHUB_OUTPUT
            elif [[ "${{matrix.images}}" =~ "populate" ]]; then
                echo "context=./utils" >> $GITHUB_OUTPUT
                echo "target=''"  >> $GITHUB_OUTPUT
            else
                echo "context=./db" >> $GITHUB_OUTPUT
                echo "target=''"  >> $GITHUB_OUTPUT
            fi
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.images }}
          flavor: |
            latest=${{ github.ref_name == 'main' && 'true' || 'auto'}}
            suffix=${{ matrix.stage == 'development' && 'dev'}},onlatest=true
          tags: |
            type=ref,event=branch
            type=sha
      - name: Build and push ${{ matrix.images }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.context.outputs.context }}
          push: true
          target: ${{ steps.context.outputs.target != '' && steps.context.outputs.target || null }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
